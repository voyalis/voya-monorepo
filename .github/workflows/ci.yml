name: VoyaMonorepo CI/CD

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'release/**'
      - 'hotfix/**'
  pull_request:
    branches:
      - main
      - develop
      - 'release/**'

jobs:
  lint-test-build-common:
    name: Lint, Test & Build Common (API + Mobile)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        # fetch-depth: 0 # Turbo genellikle tüm geçmişe ihtiyaç duymaz, gerekirse eklenir.

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install Root Dependencies
        run: npm ci

      - name: Lint All Projects
        run: npx turbo run lint # Tüm workspace'deki lint script'lerini çalıştırır

      - name: Test API
        run: npm run test:api # Ana package.json'daki turbo script'ini kullanır (filter @voya/api içerir)
                               # veya npx turbo run test --filter=@voya/api -- --passWithNoTests

      - name: Test Mobile
        run: npm run test:mobile # Ana package.json'daki turbo script'ini kullanır (filter @voya/mobile içerir)
                                 # veya npx turbo run test --filter=@voya/mobile -- --passWithNoTests

      - name: Build API
        run: npm run build:api # Ana package.json'daki turbo script'ini kullanır (filter @voya/api içerir)
                               # veya npx turbo run build --filter=@voya/api

  build-and-push-api-image:
        name: Build and Push API Docker Image
        runs-on: ubuntu-latest
        needs: lint-test-build-common
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

        steps:
          - name: Checkout Code
            uses: actions/checkout@v4

          - name: Set up QEMU
            uses: docker/setup-qemu-action@v3

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3

          - name: Login to GitHub Container Registry
            uses: docker/login-action@v3
            with:
              registry: ghcr.io
              username: ${{ github.repository_owner }}
              password: ${{ secrets.GITHUB_TOKEN }}

          - name: Build and Push API Image
            id: docker_build_api
            uses: docker/build-push-action@v5
            with:
              context: .
              file: ./apps/api/Dockerfile
              push: true
              tags: |
                ghcr.io/${{ github.repository_owner }}/voya-api:${{ github.sha }}
                ghcr.io/${{ github.repository_owner }}/voya-api:${{ github.ref_name }}
              labels: |
                org.opencontainers.image.source=${{ github.repositoryUrl }}
                org.opencontainers.image.revision=${{ github.sha }}
              cache-from: type=gha
              cache-to: type=gha,mode=max

          - name: Image Digest
            run: echo "API Image digest ${{ steps.docker_build_api.outputs.digest }}"
  deploy-api-to-fly:
    name: Deploy API to Fly.io
    runs-on: ubuntu-latest
    needs: build-and-push-api-image # İmaj push edildikten sonra çalışsın
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    # environment: voya-api-test-fly-io # Eğer GitHub Environment tanımladıysanız

    steps:
      - name: Checkout Code # fly.toml için gerekli
        uses: actions/checkout@v4

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        run: flyctl deploy --config ./fly.toml --app voya-api-test --image ghcr.io/${{ github.repository_owner }}/voya-api:${{ github.sha }} --remote-only --detach --ha=false
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  build-mobile-apk:
    name: Build Mobile APK (Android)
    runs-on: ubuntu-latest
    needs: lint-test-build-common
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # Eğer root package.json'da scriptler varsa veya turbo global bağımlılıkları gerekiyorsa:
      - name: Install Root Dependencies (if needed for mobile build scripts)
        run: npm ci

      - name: Install Mobile Dependencies
        run: cd apps/mobile && flutter pub get

      - name: Build Mobile APK (Android Debug)
        run: npm run build:mobile # Ana package.json'daki script'i kullanır

      - name: Upload Android APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: voya-mobile-apk
          path: apps/mobile/build/app/outputs/flutter-apk/app-debug.apk
          
          